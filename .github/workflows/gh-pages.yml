name: build-deploy
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
      - "docs/**"

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.run_number != 1
    outputs:
      GHPAGES_TYPE: ${{ steps.first-run.outputs.GHPAGES_TYPE }}
      GHPAGES_SOURCE_BRANCH: ${{ steps.first-run.outputs.GHPAGES_SOURCE_BRANCH }}
      GHPAGES_SOURCE_PATH: ${{ steps.first-run.outputs.GHPAGES_SOURCE_PATH }}
    steps:
      - name: First Run
        id: first-run
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const currentBranch = context.ref.replace('refs/heads/', '');

            try {
              const response = await github.request('GET /repos/{owner}/{repo}/pages', { owner, repo });
              const buildType = response.data.build_type;
              const deploymentBranch = response.data.source.branch;
              const rootDir = response.data.source.path;

              core.setOutput('GHPAGES_TYPE', buildType);
              core.setOutput('GHPAGES_SOURCE_BRANCH', deploymentBranch);
              core.setOutput('GHPAGES_SOURCE_PATH', rootDir);

              if (currentBranch === deploymentBranch) {
                  core.setOutput('GHPAGES_SOURCE_BRANCH', 'gh-pages');
                  core.setOutput('GHPAGES_SOURCE_PATH', '/');
                  core.warning(`The current branch '${currentBranch}' is set as the deployment branch.`);
                  core.warning(`Deployment branch will be switched to 'gh-pages'.`);
                  core.warning(`Please update source branch from '${deploymentBranch}' to 'gh-pages'${rootDir.includes("docs") ? ` and folder path from '${rootDir}' to '/'.` : "."}`);
                  core.notice(`https://github.com/${owner}/${repo}/settings/pages ([Build and deployment])`);
              }
            } catch (error) {
              core.warning('Please verify that the repository has Pages enabled and configured to build.');
              core.notice(`https://github.com/${owner}/${repo}/settings/pages ([Build and deployment] > [Branch])`);
            }

      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install and Build
        run: |
          pnpm install --frozen-lockfile
          pnpm run build --public-url /${{ github.event.repository.name }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy-workflow:
    needs: build
    if: success() && needs.build.outputs.GHPAGES_TYPE == 'workflow'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Deploy
        id: deploy
        uses: actions/deploy-pages@v4

  deploy-legacy:
    needs: build
    if: success() && needs.build.outputs.GHPAGES_TYPE == 'legacy'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages

      - name: Extract artifact
        run: |
          mkdir -p dist
          tar -xvf ./artifact.tar -C dist

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Set Commit Message
        id: commit_msg
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          if [[ "${{ needs.build.outputs.GHPAGES_SOURCE_PATH }}" == "/" ]]; then
            echo "MESSAGE=Deploy: $SHORT_SHA" >> $GITHUB_ENV
          else
            echo "MESSAGE=Update Docs: $SHORT_SHA" >> $GITHUB_ENV
          fi

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./dist
          branch: ${{ needs.build.outputs.GHPAGES_SOURCE_BRANCH }}
          target-folder: ".${{ needs.build.outputs.GHPAGES_SOURCE_PATH }}"
          single-commit: ${{ needs.build.outputs.GHPAGES_SOURCE_BRANCH != 'main' }}
          clean: ${{ needs.build.outputs.GHPAGES_SOURCE_BRANCH != 'main' }}
          commit-message: ${{ env.MESSAGE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          git-config-name: 'github-actions[bot]'
          git-config-email: 'github-actions[bot]@users.noreply.github.com'

  trigger-pages-check:
    runs-on: ubuntu-latest
    needs: [deploy-workflow, deploy-legacy]
    if: ${{ always() && !(needs.deploy-workflow.result == 'cancelled' && needs.deploy-legacy.result == 'cancelled') && needs.build.result == 'success' }}
    outputs:
      proceed: ${{ steps.set_proceed.outputs.proceed }}
    steps:
      - name: Determine if at least one job succeeded
        run: |
          if [[ "${{ needs.deploy-workflow.result }}" == "success" || "${{ needs.deploy-legacy.result }}" == "success" ]]; then
            echo "::success:: good!"
          else
            echo "::warning:: bruhh??"
          fi
